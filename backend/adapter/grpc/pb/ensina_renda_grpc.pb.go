// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: ensina_renda.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	EnsinaRendaService_CadastrarAluno_FullMethodName      = "/ensina_renda.EnsinaRendaService/CadastrarAluno"
	EnsinaRendaService_VerificarAluno_FullMethodName      = "/ensina_renda.EnsinaRendaService/VerificarAluno"
	EnsinaRendaService_RealizarLogin_FullMethodName       = "/ensina_renda.EnsinaRendaService/RealizarLogin"
	EnsinaRendaService_ConcluirAula_FullMethodName        = "/ensina_renda.EnsinaRendaService/ConcluirAula"
	EnsinaRendaService_ConcluirModulo_FullMethodName      = "/ensina_renda.EnsinaRendaService/ConcluirModulo"
	EnsinaRendaService_ListarModuloAulas_FullMethodName   = "/ensina_renda.EnsinaRendaService/ListarModuloAulas"
	EnsinaRendaService_GetUsuarioPeloEmail_FullMethodName = "/ensina_renda.EnsinaRendaService/GetUsuarioPeloEmail"
	EnsinaRendaService_AtualizarSenha_FullMethodName      = "/ensina_renda.EnsinaRendaService/AtualizarSenha"
	EnsinaRendaService_GerarProva_FullMethodName          = "/ensina_renda.EnsinaRendaService/GerarProva"
	EnsinaRendaService_GetProvaGerada_FullMethodName      = "/ensina_renda.EnsinaRendaService/GetProvaGerada"
	EnsinaRendaService_CorrigirProva_FullMethodName       = "/ensina_renda.EnsinaRendaService/CorrigirProva"
	EnsinaRendaService_GetProvaCorrigida_FullMethodName   = "/ensina_renda.EnsinaRendaService/GetProvaCorrigida"
)

// EnsinaRendaServiceClient is the client API for EnsinaRendaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EnsinaRendaServiceClient interface {
	CadastrarAluno(ctx context.Context, in *CadastrarAlunoRequest, opts ...grpc.CallOption) (*CadastrarAlunoResponse, error)
	VerificarAluno(ctx context.Context, in *VerificarAlunoRequest, opts ...grpc.CallOption) (*VerificarAlunoResponse, error)
	RealizarLogin(ctx context.Context, in *RealizarLoginRequest, opts ...grpc.CallOption) (*RealizarLoginResponse, error)
	ConcluirAula(ctx context.Context, in *ConcluirAulaRequest, opts ...grpc.CallOption) (*ConcluirAulaResponse, error)
	ConcluirModulo(ctx context.Context, in *ConcluirModuloRequest, opts ...grpc.CallOption) (*ConcluirModuloResponse, error)
	ListarModuloAulas(ctx context.Context, in *ListarModuloAulasRequest, opts ...grpc.CallOption) (*ListarModuloAulasResponse, error)
	GetUsuarioPeloEmail(ctx context.Context, in *GetUsuarioPeloEmailRequest, opts ...grpc.CallOption) (*GetUsuarioPeloEmailResponse, error)
	AtualizarSenha(ctx context.Context, in *AtualizarSenhaRequest, opts ...grpc.CallOption) (*AtualizarSenhaResponse, error)
	GerarProva(ctx context.Context, in *GerarProvaRequest, opts ...grpc.CallOption) (*GerarProvaResponse, error)
	GetProvaGerada(ctx context.Context, in *GetProvaGeradaRequest, opts ...grpc.CallOption) (*GetProvaGeradaResponse, error)
	CorrigirProva(ctx context.Context, in *CorrigirProvaRequest, opts ...grpc.CallOption) (*CorrigirProvaResponse, error)
	GetProvaCorrigida(ctx context.Context, in *GetProvaCorrigidaRequest, opts ...grpc.CallOption) (*GetProvaCorrigidaResponse, error)
}

type ensinaRendaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEnsinaRendaServiceClient(cc grpc.ClientConnInterface) EnsinaRendaServiceClient {
	return &ensinaRendaServiceClient{cc}
}

func (c *ensinaRendaServiceClient) CadastrarAluno(ctx context.Context, in *CadastrarAlunoRequest, opts ...grpc.CallOption) (*CadastrarAlunoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CadastrarAlunoResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_CadastrarAluno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) VerificarAluno(ctx context.Context, in *VerificarAlunoRequest, opts ...grpc.CallOption) (*VerificarAlunoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(VerificarAlunoResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_VerificarAluno_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) RealizarLogin(ctx context.Context, in *RealizarLoginRequest, opts ...grpc.CallOption) (*RealizarLoginResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RealizarLoginResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_RealizarLogin_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) ConcluirAula(ctx context.Context, in *ConcluirAulaRequest, opts ...grpc.CallOption) (*ConcluirAulaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ConcluirAulaResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_ConcluirAula_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) ConcluirModulo(ctx context.Context, in *ConcluirModuloRequest, opts ...grpc.CallOption) (*ConcluirModuloResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ConcluirModuloResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_ConcluirModulo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) ListarModuloAulas(ctx context.Context, in *ListarModuloAulasRequest, opts ...grpc.CallOption) (*ListarModuloAulasResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListarModuloAulasResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_ListarModuloAulas_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) GetUsuarioPeloEmail(ctx context.Context, in *GetUsuarioPeloEmailRequest, opts ...grpc.CallOption) (*GetUsuarioPeloEmailResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetUsuarioPeloEmailResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_GetUsuarioPeloEmail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) AtualizarSenha(ctx context.Context, in *AtualizarSenhaRequest, opts ...grpc.CallOption) (*AtualizarSenhaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AtualizarSenhaResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_AtualizarSenha_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) GerarProva(ctx context.Context, in *GerarProvaRequest, opts ...grpc.CallOption) (*GerarProvaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GerarProvaResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_GerarProva_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) GetProvaGerada(ctx context.Context, in *GetProvaGeradaRequest, opts ...grpc.CallOption) (*GetProvaGeradaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetProvaGeradaResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_GetProvaGerada_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) CorrigirProva(ctx context.Context, in *CorrigirProvaRequest, opts ...grpc.CallOption) (*CorrigirProvaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CorrigirProvaResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_CorrigirProva_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ensinaRendaServiceClient) GetProvaCorrigida(ctx context.Context, in *GetProvaCorrigidaRequest, opts ...grpc.CallOption) (*GetProvaCorrigidaResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetProvaCorrigidaResponse)
	err := c.cc.Invoke(ctx, EnsinaRendaService_GetProvaCorrigida_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnsinaRendaServiceServer is the server API for EnsinaRendaService service.
// All implementations must embed UnimplementedEnsinaRendaServiceServer
// for forward compatibility.
type EnsinaRendaServiceServer interface {
	CadastrarAluno(context.Context, *CadastrarAlunoRequest) (*CadastrarAlunoResponse, error)
	VerificarAluno(context.Context, *VerificarAlunoRequest) (*VerificarAlunoResponse, error)
	RealizarLogin(context.Context, *RealizarLoginRequest) (*RealizarLoginResponse, error)
	ConcluirAula(context.Context, *ConcluirAulaRequest) (*ConcluirAulaResponse, error)
	ConcluirModulo(context.Context, *ConcluirModuloRequest) (*ConcluirModuloResponse, error)
	ListarModuloAulas(context.Context, *ListarModuloAulasRequest) (*ListarModuloAulasResponse, error)
	GetUsuarioPeloEmail(context.Context, *GetUsuarioPeloEmailRequest) (*GetUsuarioPeloEmailResponse, error)
	AtualizarSenha(context.Context, *AtualizarSenhaRequest) (*AtualizarSenhaResponse, error)
	GerarProva(context.Context, *GerarProvaRequest) (*GerarProvaResponse, error)
	GetProvaGerada(context.Context, *GetProvaGeradaRequest) (*GetProvaGeradaResponse, error)
	CorrigirProva(context.Context, *CorrigirProvaRequest) (*CorrigirProvaResponse, error)
	GetProvaCorrigida(context.Context, *GetProvaCorrigidaRequest) (*GetProvaCorrigidaResponse, error)
	mustEmbedUnimplementedEnsinaRendaServiceServer()
}

// UnimplementedEnsinaRendaServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedEnsinaRendaServiceServer struct{}

func (UnimplementedEnsinaRendaServiceServer) CadastrarAluno(context.Context, *CadastrarAlunoRequest) (*CadastrarAlunoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CadastrarAluno not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) VerificarAluno(context.Context, *VerificarAlunoRequest) (*VerificarAlunoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerificarAluno not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) RealizarLogin(context.Context, *RealizarLoginRequest) (*RealizarLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RealizarLogin not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) ConcluirAula(context.Context, *ConcluirAulaRequest) (*ConcluirAulaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConcluirAula not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) ConcluirModulo(context.Context, *ConcluirModuloRequest) (*ConcluirModuloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConcluirModulo not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) ListarModuloAulas(context.Context, *ListarModuloAulasRequest) (*ListarModuloAulasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListarModuloAulas not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) GetUsuarioPeloEmail(context.Context, *GetUsuarioPeloEmailRequest) (*GetUsuarioPeloEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsuarioPeloEmail not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) AtualizarSenha(context.Context, *AtualizarSenhaRequest) (*AtualizarSenhaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AtualizarSenha not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) GerarProva(context.Context, *GerarProvaRequest) (*GerarProvaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GerarProva not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) GetProvaGerada(context.Context, *GetProvaGeradaRequest) (*GetProvaGeradaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvaGerada not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) CorrigirProva(context.Context, *CorrigirProvaRequest) (*CorrigirProvaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CorrigirProva not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) GetProvaCorrigida(context.Context, *GetProvaCorrigidaRequest) (*GetProvaCorrigidaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvaCorrigida not implemented")
}
func (UnimplementedEnsinaRendaServiceServer) mustEmbedUnimplementedEnsinaRendaServiceServer() {}
func (UnimplementedEnsinaRendaServiceServer) testEmbeddedByValue()                            {}

// UnsafeEnsinaRendaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EnsinaRendaServiceServer will
// result in compilation errors.
type UnsafeEnsinaRendaServiceServer interface {
	mustEmbedUnimplementedEnsinaRendaServiceServer()
}

func RegisterEnsinaRendaServiceServer(s grpc.ServiceRegistrar, srv EnsinaRendaServiceServer) {
	// If the following call pancis, it indicates UnimplementedEnsinaRendaServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&EnsinaRendaService_ServiceDesc, srv)
}

func _EnsinaRendaService_CadastrarAluno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CadastrarAlunoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).CadastrarAluno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_CadastrarAluno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).CadastrarAluno(ctx, req.(*CadastrarAlunoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_VerificarAluno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerificarAlunoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).VerificarAluno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_VerificarAluno_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).VerificarAluno(ctx, req.(*VerificarAlunoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_RealizarLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealizarLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).RealizarLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_RealizarLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).RealizarLogin(ctx, req.(*RealizarLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_ConcluirAula_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConcluirAulaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).ConcluirAula(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_ConcluirAula_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).ConcluirAula(ctx, req.(*ConcluirAulaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_ConcluirModulo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConcluirModuloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).ConcluirModulo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_ConcluirModulo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).ConcluirModulo(ctx, req.(*ConcluirModuloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_ListarModuloAulas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListarModuloAulasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).ListarModuloAulas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_ListarModuloAulas_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).ListarModuloAulas(ctx, req.(*ListarModuloAulasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_GetUsuarioPeloEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsuarioPeloEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).GetUsuarioPeloEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_GetUsuarioPeloEmail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).GetUsuarioPeloEmail(ctx, req.(*GetUsuarioPeloEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_AtualizarSenha_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AtualizarSenhaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).AtualizarSenha(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_AtualizarSenha_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).AtualizarSenha(ctx, req.(*AtualizarSenhaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_GerarProva_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GerarProvaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).GerarProva(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_GerarProva_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).GerarProva(ctx, req.(*GerarProvaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_GetProvaGerada_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvaGeradaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).GetProvaGerada(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_GetProvaGerada_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).GetProvaGerada(ctx, req.(*GetProvaGeradaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_CorrigirProva_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CorrigirProvaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).CorrigirProva(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_CorrigirProva_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).CorrigirProva(ctx, req.(*CorrigirProvaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnsinaRendaService_GetProvaCorrigida_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvaCorrigidaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnsinaRendaServiceServer).GetProvaCorrigida(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnsinaRendaService_GetProvaCorrigida_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnsinaRendaServiceServer).GetProvaCorrigida(ctx, req.(*GetProvaCorrigidaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EnsinaRendaService_ServiceDesc is the grpc.ServiceDesc for EnsinaRendaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EnsinaRendaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ensina_renda.EnsinaRendaService",
	HandlerType: (*EnsinaRendaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CadastrarAluno",
			Handler:    _EnsinaRendaService_CadastrarAluno_Handler,
		},
		{
			MethodName: "VerificarAluno",
			Handler:    _EnsinaRendaService_VerificarAluno_Handler,
		},
		{
			MethodName: "RealizarLogin",
			Handler:    _EnsinaRendaService_RealizarLogin_Handler,
		},
		{
			MethodName: "ConcluirAula",
			Handler:    _EnsinaRendaService_ConcluirAula_Handler,
		},
		{
			MethodName: "ConcluirModulo",
			Handler:    _EnsinaRendaService_ConcluirModulo_Handler,
		},
		{
			MethodName: "ListarModuloAulas",
			Handler:    _EnsinaRendaService_ListarModuloAulas_Handler,
		},
		{
			MethodName: "GetUsuarioPeloEmail",
			Handler:    _EnsinaRendaService_GetUsuarioPeloEmail_Handler,
		},
		{
			MethodName: "AtualizarSenha",
			Handler:    _EnsinaRendaService_AtualizarSenha_Handler,
		},
		{
			MethodName: "GerarProva",
			Handler:    _EnsinaRendaService_GerarProva_Handler,
		},
		{
			MethodName: "GetProvaGerada",
			Handler:    _EnsinaRendaService_GetProvaGerada_Handler,
		},
		{
			MethodName: "CorrigirProva",
			Handler:    _EnsinaRendaService_CorrigirProva_Handler,
		},
		{
			MethodName: "GetProvaCorrigida",
			Handler:    _EnsinaRendaService_GetProvaCorrigida_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ensina_renda.proto",
}
